- name: dotfiles - download dotfiles
  block:
    - name: dotfiles - detect dotfiles existence
      stat:
        path: ~/.dotfiles
      register: dotfiles_stat
    - name: dotfiles - download dotfiles if needed
      git:
        repo: git@github.com:boxmein/dotfiles.git
        dest: ~/.dotfiles/
      when: not dotfiles_stat.stat.exists

- name: dotfiles - symlink stuff (mac/linux)
  file:
    state: link
    src: "~/.dotfiles/{{ item }}"
    path: "~/{{ item }}"
    force: true # delete the pre-existing versions
  loop:
    - .zshrc
    - .zshenv
    - .p10k.zsh
    - antigen.zsh
    - .vimrc
    - .vim
    - .docker
    - .gitconfig
    - .tmux.conf
    - .weechat

- name: dotfiles - symlink secure stuff (mac/linux)
  file:
    state: link
    src: "~/.dotfiles/{{ item }}"
    path: "~/{{ item }}"
    mode: u=rw,g=,o=
    force: true # delete pre-existing versions
  loop:
    - .pgpass
    - .netrc

- name: dotfiles - symlink stuff (mac)
  file:
    state: link
    src: "~/.dotfiles/{{ item }}"
    path: "~/{{ item }}"
  loop:
    - .hammerspoon
    - .inputrc
    - Library/KeyBindings
  when: ansible_system == "Darwin"

- name: dotfiles - symlink stuff (linux)
  file:
    state: link
    src: "~/.dotfiles/{{ item }}"
    path: "~/{{ item }}"
    force: true # delete pre-existing versions
  loop:
    - .xbindkeysrc
    - .xinitrc
    - .Xdefaults
    - .Xresources
    - .alacritty.yml
    - .selected_editor
  when: ansible_system == "Linux"

# Kubernetes
- name: dotfiles - kube config dir
  file:
    path: ~/.kube
    state: directory

- name: dotfiles - kube config link
  file:
    path: ~/.kube/config
    src: ~/.dotfiles/.kube/config
    state: link
    force: true # delete pre-existing versions
